@using System.Text.RegularExpressions;
@{
    var redirectTo28CodeExample = "href='eg028'";
    int formNumber = 0;
    int signerNameInputNumber = 1;
    int signerEmailInputNumber = 0;
    int brandInputNumber = 2;
}

<h4>@Html.Raw(ViewBag.CodeExampleText.ExampleName)</h4>
<p>
    @Html.Raw(ViewBag.CodeExampleText.ExampleDescription)
</p>

@if (ViewBag.showDoc == true)
{
    <p><a target='_blank' href='<%= documentation %>'>Documentation</a> about this example</p>
}

<partial name="../../../Views/Shared/LinkToMethodView" model="ViewBag.CodeExampleText" /> 

<p>
    @Html.Raw(
        @String.Format(
            ViewBag.SupportingTexts.ViewSourceFile, 
            "<a target='_blank' href=" + @ViewBag.source + ">ApplyBrandToEnvelope.cs</a>"
        )
    )
</p>

<form class="eg" action="" method="post" data-busy="form">
    <div class="form-group">
        <label for="signerEmail">
            @Html.Raw(ViewBag.CodeExampleText.Forms[formNumber].Inputs[signerEmailInputNumber].InputName)
        </label>

        <input type="email" 
               class="form-control" 
               id="signerEmail" 
               name="signerEmail"
               aria-describedby="emailHelp" 
               placeholder="@ViewBag.CodeExampleText.Forms[formNumber].Inputs[signerEmailInputNumber].InputPlaceholder" 
               required
               value="@ViewBag.Locals.DsConfig.SignerEmail">

        <small id="emailHelp" class="form-text text-muted">
            @Html.Raw(ViewBag.SupportingTexts.HelpingTexts.EmailWontBeShared)
        </small>
    </div>

    <div class="form-group">
        <label for="signerName">
            @Html.Raw(ViewBag.CodeExampleText.Forms[formNumber].Inputs[signerNameInputNumber].InputName)
        </label>

        <input type="text" 
               class="form-control" 
               id="signerName" 
               placeholder="@ViewBag.CodeExampleText.Forms[formNumber].Inputs[signerNameInputNumber].InputPlaceholder"
               name="signerName"
               value="@ViewBag.Locals.DsConfig.SignerName" 
               required />
    </div>

    <div class="form-group">
        <label for="brandId">
            @Html.Raw(ViewBag.CodeExampleText.Forms[formNumber].Inputs[brandInputNumber].InputName)
        </label>

        @if (ViewBag.Brands == null)
        {
            <p>
                @Html.Raw(
                    String.Format(
                        ((IEnumerable<dynamic>) ViewBag.CodeExampleText.RedirectsToOtherCodeExamples)
                            .Where(x => x.CodeExampleToRedirectTo == int.Parse(Regex.Match(redirectTo28CodeExample, @"\d+").Value))
                            .FirstOrDefault()
                            .RedirectText,
                        redirectTo28CodeExample
                    )
                )
            </p>
        }
        else
        {
            @Html.DropDownList(
               "brandId", 
               new SelectList(ViewBag.Brands, "BrandId", "BrandName"), 
               new { @class = "form-control" }
           )
        }
    </div>

    <input type="hidden" name="_csrf" value="<%- csrfToken %>">
    @if (ViewBag.Brands != null)
    {
        @:<button type="submit" class="btn btn-primary">@Html.Raw(ViewBag.SupportingTexts.SubmitButton)</button>
    }
</form>
